# Docker Compose for Universal Feedback Platform
# Supports development and production environments

version: '3.8'

services:
  # ================================
  # Backend API Service
  # ================================
  twise-backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: ${DOCKER_TARGET:-production}
    container_name: twise-sentiment-backend
    restart: unless-stopped
    ports:
      - "${PORT:-3001}:3001"
    environment:
      - NODE_ENV=${NODE_ENV:-production}
      - PORT=3001
    env_file:
      - .env.local
    volumes:
      # Development: Mount source code for hot reload
      - type: ${VOLUME_TYPE:-volume}
        source: ${SOURCE_PATH:-twise_backend_data}
        target: /app
        consistency: cached
      # Logs and cache
      - ./logs:/app/logs
      - ./cache:/app/cache
    networks:
      - twise-network
    healthcheck:
      test: ["CMD", "node", "-e", "require('http').get('http://localhost:3001/health', (res) => process.exit(res.statusCode === 200 ? 0 : 1)).on('error', () => process.exit(1))"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # ================================
  # Redis Cache (Optional)
  # ================================
  redis:
    image: redis:7-alpine
    container_name: twise-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD:-twise123}
    volumes:
      - redis_data:/data
    networks:
      - twise-network
    profiles:
      - cache
      - full

  # ================================
  # Nginx Reverse Proxy (Optional)
  # ================================
  nginx:
    image: nginx:alpine
    container_name: twise-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - twise-backend
    networks:
      - twise-network
    profiles:
      - proxy
      - production
      - full

  # ================================
  # Monitoring (Optional)
  # ================================
  prometheus:
    image: prom/prometheus:latest
    container_name: twise-prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    networks:
      - twise-network
    profiles:
      - monitoring
      - full

  grafana:
    image: grafana/grafana:latest
    container_name: twise-grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin123}
    volumes:
      - grafana_data:/var/lib/grafana
    networks:
      - twise-network
    profiles:
      - monitoring
      - full

# ================================
# Networks
# ================================
networks:
  twise-network:
    driver: bridge

# ================================
# Volumes
# ================================
volumes:
  twise_backend_data:
  redis_data:
  prometheus_data:
  grafana_data:
